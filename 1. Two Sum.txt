# 1. Two Sum [Array] [Hash Table] [Easy]

Given an array of integers, return indices of the two numbers such that they add up to a specific target.
You may assume that each input would have exactly one solution, and you may not use the same element twice.
Example:
Given nums = [2, 7, 11, 15], target = 9,
Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].

[题目]给定一个整数数组，返回其中相加起来等于某个目标值的两个数的下标。
[解法]用哈希表存储每个数对应的下标，复杂度TO(n)，SO(n)

``` C++
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int> result;
        if (nums.size()<2) return result;
        unordered_map<int, int> map;
        for(int i = 0; i < nums.size(); ++i) {
            int complement = target - nums[i];
            if (map.find(complement) != map.end()) {
                result.push_back(i);
                result.push_back(map[complement]);
                return result;
            } else {
                map.insert(pair<int, int>(nums[i],i));
            }
        }
        return result;
    }
};
```
